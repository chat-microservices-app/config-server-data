# defer the h2 database from initializing until before spring data jpa is initialized
spring.jpa.defer-datasource-initialization=true

eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.client.healthcheck.enabled=true

eureka.instance.lease-expiration-duration-in-seconds=75
eureka.instance.lease-renewal-interval-in-seconds=60
eureka.instance.prefer-ip-address=true

logging.level.org.hibernate.stat=debug

#log security events
logging.level.org.springframework.security=TRACE

logging.level.com.chatapp.usermanagement=DEBUG

#spring.sql.init.schema-locations=classpath:sql/schema.sql
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

springdoc.show-actuator=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#kafka configs
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=chat-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=userDTO:com.chatapp.chatservice.web.dto.UserDTO, messageForm:com.chatapp.chatservice.web.dto.MessageForm
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.user-updates=user-management-topic

#feign client services
security-service.name=security-service