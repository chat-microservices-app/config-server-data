# number of connections in the pool for the database
spring.datasource.hikari.maximum-pool-size=5


#spring.sql.init.schema-locations=classpath:sql/schema.sql
spring.datasource.url=jdbc:postgresql://${DATABASE_URL:localhost:5430/chat_service}?characterEncoding=UTF-8
spring.datasource.username=${DATABASE_USERNAME:chat_service}
spring.datasource.password=${DATABASE_PASSWORD:chat_service_password}
spring.jpa.database=postgresql
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

# setting up postgresql dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect



# kafka config
spring.kafka.topic.chat-messaging=chat-messaging-topic

# eureka configs
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.default-zone=${EUREKA_SERVER:http://localhost:8761}/eureka/
eureka.client.healthcheck.enabled=true
eureka.instance.lease-expiration-duration-in-seconds=75
eureka.instance.lease-renewal-interval-in-seconds=60
eureka.instance.prefer-ip-address=true

#setting up time zone for the application
spring.jackson.time-zone=America/Los_Angeles
spring.jpa.properties.hibernate.jdbc.time_zone=America/Los_Angeles


# for swagger
springdoc.show-actuator=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#kafka configs
spring.kafka.bootstrap-servers=${KAFKA_URL:localhost:29092}
spring.kafka.consumer.group-id=chat-service

# to convert the object to json
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# to convert json to the object
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=userDTO:com.chatapp.chatservice.web.dto.UserDTO, messageForm:com.chatapp.chatservice.web.dto.MessageForm


spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.user-updates=user-management-topic

#feign client services
security-service.name=security-service